services:
  api:
    build: .            # ✅ au lieu de { context: ., dockerfile: Dockerfile }
    image: pokedex-api:dev
    container_name: pokedex-api
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"     # change côté hôte si conflit: "8081:8080"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health/liveness | grep '\"status\":\"UP\"' || exit 1"]
      interval: 20s
      timeout: 3s
      retries: 5
      start_period: 20s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  redis:
    image: redis:7-alpine
    container_name: pokedex-redis
    command: ["redis-server","--appendonly","no","--protected-mode","no","--bind","0.0.0.0"]
    ports:
      - "6379:6379"     # si conflit, mets "6380:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h 127.0.0.1 -p 6379 ping | grep PONG || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: pokedex-prometheus
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:11.2.0
    container_name: pokedex-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./ops/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus

volumes:
  prom_data:
  grafana_data:
